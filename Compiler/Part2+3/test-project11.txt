/* my comment  
   Is Long :)  */
bool  func1(int  a, b, c; char c1) 
{
  var bool  result;
  {
     var char x, b;
     var int y;
     b='^';
     /*1  a=x; */
     /*2 b=8; */
     a=(y*890)/a-y;
     /*3 a=(y*71)/b-y; */
     /*4 a=(y*55)/a-c; */
     /*5 result =(b==c) && (y<a); */
     /*6 result =(b==c1) && (y-a); */
     /*7 8+6=14; */
     /*8%x=6 ;*/
  }
return result;
}
void  func2 (int  i, j, k, x)
{
    bool func3 (int l, m, n) 
    {
       var bool x, j;
       /*10 var bool n;*/
       var char k;
       k='@';
       i=l + l;
       /*11 i=j+1; */
       /*12 i=k+1; */
       if((k=='*') || (x!=false) && ( (l+m) < i)) {
           x=l<m;
       }
       return x;
    }
    {
        var char  x;
        var bool k;
        k= func3 (900,i,j);
        /*13 x= func3 (8,i,j); */
        /*14 k = func3 (99,i); */
        /*15k = func3 (15,x,j); */
    }
    /*16 n=false; */
    /*17 x='#'; */
    x=k;
}
int foo3(int  i ,j, k) 
{
   int  square(int  t)  /* function declaration */
   {
       var int temp;
       temp=t*t;
       return temp;
   }
   var  int  total; /* variable declaration */
   var bool boo;
   boo=func1(i, j, k, '^');
   /*18 j=foo2();*/ 
   total=square(i+j+k);  /* statemets */
   return total;
}
int foo2() 
{
   string  s1 [100];
   string  s2 [100];
   var  int i, j, cnt;
   i=0;
   j=0;
   cnt=0;
   while(i < |s1|)  {
        while(j < (|s2| / 2))  {
      /*     if(s1[i] == s2[j])   {
               cnt=cnt*2;
           }*/
          j=1+j;
        }
        i=1+i;
   }
   return cnt;
}
int  foo4() 
{
   {
     var int  x;
     var int* y;
     x=5;
     y=&x;
     x=6;
     if(&x == y  ) {
       *y=9;
     }
     {
       var char* x;
       string y[10];
       var char z;
      /*x=&y[5];*/
       z=*(-5+x);
       y="barfoo";
       {
          var char x;
          var int* y;
          var char* z;
          var char g;
          /*19 y=&(1+3); 
               y=&x;
               z=&(&(g)); */
       }
     }
   }
   return 0;
} 
void main()
{
  var int a;
  a=13;
  a = foo2();
}
